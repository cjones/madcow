# -*- coding: utf-8 -*-
# Generated by Django 1.10.7 on 2017-04-21 08:49
from __future__ import unicode_literals

from mezzanine.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import memebot.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('memebot', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Alias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('username', models.CharField(max_length=30, unique=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='aliases', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('url', models.TextField()),
                ('normalized', models.TextField()),
                ('reposts', models.IntegerField(default=0)),
                ('state', models.CharField(choices=[('new', 'New'), ('disabled', 'Disabled'), ('invalid', 'Invalid'), ('archived', 'Archived'), ('published', 'Published')], default='new', max_length=16)),
                ('error_count', models.IntegerField(default=0)),
                ('resolved_url', models.TextField(blank=True, default=None, null=True)),
                ('content_type', models.CharField(blank=True, default=None, max_length=64, null=True)),
                ('content', memebot.fields.SerializedDataField(blank=True, default=None, null=True)),
                ('title', models.TextField(blank=True, default=None, null=True)),
                ('published', models.DateTimeField(blank=True, default=None, null=True)),
                ('publish_id', models.IntegerField(blank=True, default=None, null=True, unique=True)),
                ('scanner', models.TextField(blank=True, default=None, null=True)),
                ('attr_storage', memebot.fields.PickleField(blank=True, default=None, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('value', models.TextField()),
                ('link', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='memebot.Link')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SerializedData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=64, unique=True)),
                ('description', models.TextField(blank=True, default=None, null=True)),
                ('value', memebot.fields.PickleField(blank=True, default=None, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('type', models.CharField(choices=[('irc', 'IRC'), ('web', 'Web'), ('slack', 'SlackAPI')], max_length=16)),
                ('name', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('posted_new', models.IntegerField(default=0)),
                ('posted_old', models.IntegerField(default=0)),
                ('reposts', models.IntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AlterUniqueTogether(
            name='source',
            unique_together=set([('type', 'name')]),
        ),
        migrations.AddField(
            model_name='link',
            name='source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='links', to='memebot.Source'),
        ),
        migrations.AddField(
            model_name='link',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='links', to=settings.AUTH_USER_MODEL),
        ),
    ]
